{"version":3,"sources":["firebase.js","config.js","Admin.js","Candidate.js","JobDescription.js","Pool.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Admin","props","state","isLoggedIn","showErrorMessage","passwordAttempt","doneGettingUserData","doneGettingActivityData","downloadState","NUM_PAGES","userCSVheaders","DATABASE","firestore","users","userData","activityData","handlePasswordChange","bind","handlePasswordSubmit","downloadData","filenameString","event","this","setState","target","value","preventDefault","collection","get","tmp","docs","i","thisUser","length","push","id","userID","data","promises","k","doc","then","pageData","forEach","item","idx","pageNum","activityid","Promise","all","d","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","className","onClick","headers","filename","onSubmit","onChange","type","React","Component","Candidate","resume","Card","Body","name","JobDescription","job_title","job_loc","job_summary","main_tasks","req_skills","Pool","names","URLSearchParams","location","search","resumeList","resumesOrder","qualtricsUserId","match","params","parseInt","recordActivity","numNames","prevPercent","getJobDescription","recordOrder","populateValues","myInterval","setInterval","docRect","document","getElementsByClassName","getBoundingClientRect","contentHeight","height","maxPosition","window","innerHeight","scrollPosition","Math","abs","bottom","scrollPercent","round","clearInterval","namesDBKV","set","resumesDBKV","shuffle","n","Array","keys","renderBulletList","newOrder","doc2","kvp","ithResume","getCandidateResume","resumeNumber","indexInOrder","new_dict","edu_degree","edu_distinction","edu_duration","edu_major","edu_university","work1_company","work1_description","work1_duration","work1_location","work1_title","work2_company","work2_description","work2_duration","work2_location","work2_title","work3_company","work3_description","work3_duration","work3_location","work3_title","work4_company","work4_description","work4_duration","work4_location","work4_title","tabNum","defaultIndex","onSelect","index","map","array","j","floor","random","txt","viewBulletList","split","moment","require","App","activityCounter","loc","hash","console","log","cat","val","desc","now","category","description","timestamp","timeEpoch","Number","format","timeReadable","tz","path","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1522d19.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Contains sensitive information, so you have to create this file yourself\nimport { firebaseConfig } from \"./config.js\";\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","export const adminPassword = \"Purchase-Unfair-Dribble-Scavenger3-Capacity\";\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyBARurBcuPfg3SWhuI1Ry1WqPFn7IgORN0\",\n  authDomain: \"claire-dtp-project.firebaseapp.com\",\n  projectId: \"claire-dtp-project\",\n  storageBucket: \"claire-dtp-project.appspot.com\",\n  messagingSenderId: \"348955792385\",\n  appId: \"1:348955792385:web:a9aecc0cf1a7539bb85c00\",\n  measurementId: \"G-G2YTZ3QEG3\",\n};\n","import React from \"react\";\nimport firebase from \"./firebase\";\nimport { CSVLink } from \"react-csv\";\nimport \"./styles/Admin.css\";\n// Contains sensitive information, so you have to create this file yourself\nimport { adminPassword } from \"./config.js\";\n\nexport default class Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      showErrorMessage: false,\n      passwordAttempt: \"\",\n      doneGettingUserData: false,\n      doneGettingActivityData: false,\n      downloadState: \"\",\n    };\n\n    // !! This is hardcoded!!\n    this.NUM_PAGES = 7;\n    this.userCSVheaders = [\n      \"userID\",\n      \"candidate1_resume\",\n      \"candidate2_resume\",\n      \"candidate3_resume\",\n      \"candidate4_resume\",\n      \"candidate5_resume\",\n      \"candidate6_resume\",\n    ];\n\n    this.DATABASE = firebase.firestore();\n    this.users = [];\n    this.userData = [];\n    this.activityData = [];\n    // Bind methods\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.downloadData = this.downloadData.bind(this);\n    this.filenameString = this.filenameString.bind(this);\n  }\n\n  // For logging in\n  handlePasswordChange(event) {\n    this.setState({ showErrorMessage: false });\n    this.setState({ passwordAttempt: event.target.value });\n  }\n\n  // For logging in\n  handlePasswordSubmit(event) {\n    event.preventDefault();\n    if (this.state.passwordAttempt === adminPassword) {\n      this.setState({ isLoggedIn: true });\n    } else {\n      this.setState({ showErrorMessage: true });\n    }\n  }\n\n  async downloadData() {\n    this.setState({\n      downloadState: \"Downloading...\",\n    });\n\n    let tmp = await this.DATABASE.collection(\"userIDs\").get();\n    let users = tmp.docs;\n    for (let i = 0; i < users.length; i++) {\n      let thisUser = users[i];\n      this.setState({\n        downloadState:\n          \"Downloading #\" + (i + 1) + \" of \" + users.length + \"...\",\n      });\n      // Add user data\n      this.users.push(thisUser.id);\n      this.userData.push({\n        userID: thisUser.id,\n        ...thisUser.data(),\n      });\n      // Add page data\n      let promises = [];\n      for (let k = 1; k <= this.NUM_PAGES; k++) {\n        promises.push(\n          this.DATABASE.collection(\"userIDs\")\n            .doc(thisUser.id)\n            .collection(\"activityData_page\" + k)\n            .get()\n            .then((pageData) => {\n              pageData.forEach((item, idx) => {\n                this.activityData.push({\n                  userID: thisUser.id,\n                  pageNum: k,\n                  activityid: item.id,\n                  ...item.data(),\n                });\n              });\n            })\n        );\n      }\n      await Promise.all(promises);\n    }\n    this.setState({ doneGettingUserData: true });\n    this.setState({ doneGettingActivityData: true });\n    this.setState({ downloadState: \"Done!\" });\n  }\n\n  filenameString() {\n    const d = new Date();\n    return (\n      \" -- \" +\n      d.getFullYear() +\n      \"-\" +\n      (d.getMonth() + 1).toString().padStart(2, \"0\") +\n      \"-\" +\n      d.getDate().toString().padStart(2, \"0\") +\n      \" \" +\n      d.getHours().toString().padStart(2, \"0\") +\n      \":\" +\n      d.getMinutes().toString().padStart(2, \"0\")\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"wholePage\">\n        <h1>Hi Claire!!!!!</h1>\n        {this.state.isLoggedIn ? (\n          <div className=\"loggedIn\">\n            <button onClick={this.downloadData}>Download Data</button>\n            <div className=\"downloadLinks\">\n              <span className=\"listItem\">{this.state.downloadState}</span>\n\n              <br />\n\n              {this.state.doneGettingUserData && (\n                <CSVLink\n                  data={this.userData}\n                  headers={this.userCSVheaders}\n                  filename={\"userData\" + this.filenameString() + \".csv\"}\n                  className=\"listItem\"\n                >\n                  Download User Data\n                </CSVLink>\n              )}\n\n              <br />\n\n              {this.state.doneGettingActivityData && (\n                <CSVLink\n                  data={this.activityData}\n                  filename={\"activityData\" + this.filenameString() + \".csv\"}\n                  className=\"listItem\"\n                >\n                  Download Activity Data\n                </CSVLink>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"loggedOut\">\n            <form onSubmit={this.handlePasswordSubmit}>\n              <input\n                onChange={this.handlePasswordChange}\n                value={this.state.passwordAttempt}\n                type=\"password\"\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n            {this.state.showErrorMessage && <span id=\"red\">Nope.</span>}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default class Candidate extends React.Component {\n  render() {\n    // Prevent crash from clicking too fast\n    if (!this.props.resume) {\n      return <h1>Loading...</h1>;\n    }\n\n    return (\n      <Card.Body>\n        <div className=\"candidate\">\n          <h1 className=\"name\">{this.props.name}</h1>\n          <hr />\n          <h2 className=\"sectionHeader\">Work Experience</h2>\n          <div>\n            <h3>{this.props.resume[\"work1_title\"]}</h3>\n            <h4>{this.props.resume[\"work1_company\"]}</h4>\n            <h5>{this.props.resume[\"work1_duration\"]}</h5>\n            <div className=\"workDescription\">\n              {this.props.resume[\"work1_description\"]}\n            </div>\n          </div>\n          <div>\n            <h3>{this.props.resume[\"work2_title\"]}</h3>\n            <h4>{this.props.resume[\"work2_company\"]}</h4>\n            <h5>{this.props.resume[\"work2_duration\"]}</h5>\n            <div className=\"workDescription\">\n              {this.props.resume[\"work2_description\"]}\n            </div>\n          </div>\n          <div>\n            <h3>{this.props.resume[\"work3_title\"]}</h3>\n            <h4>{this.props.resume[\"work3_company\"]}</h4>\n            <h5>{this.props.resume[\"work3_duration\"]}</h5>\n            <div className=\"workDescription\">\n              {this.props.resume[\"work3_description\"]}\n            </div>\n          </div>\n          <div>\n            <h3>{this.props.resume[\"work4_title\"]}</h3>\n            <h4>{this.props.resume[\"work4_company\"]}</h4>\n            <h5>{this.props.resume[\"work4_duration\"]}</h5>\n            <div className=\"workDescription\">\n              {this.props.resume[\"work4_description\"]}\n            </div>\n          </div>\n          <hr />\n          <h2 className=\"sectionHeader\">Education</h2>\n          <div>\n            <p className=\"eduBasics\">\n              {this.props.resume[\"edu_degree\"]},{\" \"}\n              {this.props.resume[\"edu_major\"]}\n            </p>\n            <p className=\"eduInfo\">\n              {this.props.resume[\"edu_university\"]},{\" \"}\n              {this.props.resume[\"edu_duration\"]}\n            </p>\n          </div>\n        </div>\n      </Card.Body>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default class JobDescription extends React.Component {\n  render() {\n    return (\n      <Card.Body>\n        <div className=\"jobDescription\">\n          <h1>Job Description: {this.props.job_title}</h1>\n          <h3>Location: {this.props.job_loc}</h3>\n          <p>{this.props.job_summary}</p>\n          <hr />\n          <h2>Main Tasks: </h2>\n          <div>{this.props.main_tasks}</div>\n          <h2>Required Knowledge and Skills: </h2>\n          <div>{this.props.req_skills}</div>\n        </div>\n      </Card.Body>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"./styles/react-tabs.css\";\nimport firebase from \"./firebase\";\nimport Candidate from \"./Candidate\";\nimport JobDescription from \"./JobDescription\";\n\nexport default class Pool extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      names: [\n        new URLSearchParams(this.props.location.search).get(\"name1\"),\n        new URLSearchParams(this.props.location.search).get(\"name2\"),\n        new URLSearchParams(this.props.location.search).get(\"name3\"),\n        new URLSearchParams(this.props.location.search).get(\"name4\"),\n        new URLSearchParams(this.props.location.search).get(\"name5\"),\n        new URLSearchParams(this.props.location.search).get(\"name6\"),\n      ],\n      resumeList: [],\n      resumesOrder: [],\n\n      job_title: null,\n      main_tasks: null,\n      req_skills: null,\n      job_loc: null,\n      job_summary: null,\n    };\n\n    // Get from the URL\n    this.qualtricsUserId = this.props.match.params.qualtricsUserId;\n    this.pageNum = parseInt(this.props.match.params.pageNum);\n\n    // Get from App\n    this.recordActivity = this.props.recordActivity.bind(this);\n\n    // These will help us later\n    this.DATABASE = firebase.firestore();\n    this.numNames = this.state.names.length;\n    // used for scroll tracking\n    this.prevPercent = 0;\n\n    // Bind methods\n    this.getJobDescription = this.getJobDescription.bind(this);\n    this.recordOrder = this.recordOrder.bind(this);\n    this.populateValues = this.populateValues.bind(this);\n  }\n\n  async componentDidMount() {\n    // Start fetching the data\n    let promises = [];\n    promises.push(this.getJobDescription());\n    // Order is assigned when visiting page 1, and followed on subsequent pages\n    if (this.pageNum === 1) {\n      this.recordOrder().then(() => {\n        promises.push(this.populateValues());\n      });\n    } else {\n      promises.push(this.populateValues());\n    }\n\n    // DTD\n    Promise.all(promises).then(() => {\n      this.recordActivity(\"loading\", \"ready\", \"data loaded\");\n    });\n\n    // Scroll tracking\n    this.myInterval = setInterval(() => {\n      const docRect = document\n        .getElementsByClassName(\"pool\")[0]\n        .getBoundingClientRect();\n\n      const contentHeight = docRect.height;\n      const viewHeight = window.innerHeight;\n      const maxPosition = contentHeight - viewHeight;\n\n      const scrollPosition = Math.abs(contentHeight - docRect.bottom);\n      const scrollPercent = Math.round((scrollPosition / maxPosition) * 100);\n\n      if (Math.abs(scrollPercent - this.prevPercent) > 5) {\n        this.recordActivity(\n          \"scroll\",\n          scrollPercent,\n          \"scrolled to \" + scrollPercent + \"%\"\n        );\n        this.prevPercent = scrollPercent;\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    // Stop tracking scroll data when leaving the page\n    clearInterval(this.myInterval);\n  }\n\n  async recordOrder() {\n    let promises = [];\n\n    // Store name order in the database\n    let namesDBKV = {};\n    for (let i = 0; i < this.numNames; i++) {\n      namesDBKV[\"candidate\" + (i + 1) + \"_name\"] = this.state.names[i];\n    }\n\n    promises.push(\n      this.DATABASE.collection(\"userIDs\")\n        .doc(this.qualtricsUserId)\n        .set(namesDBKV)\n        .then(() => {\n          this.recordActivity(\"log\", \"name_order_stored\", \"name order stored\");\n        })\n    );\n\n    // Store resume order in the database\n    let resumesDBKV = {};\n    this.state.resumesOrder = shuffle(makeArrayToN(this.numNames));\n    for (let i = 0; i < this.numNames; i++) {\n      resumesDBKV[\"candidate\" + (i + 1) + \"_resume\"] =\n        this.state.resumesOrder[i] + 1;\n    }\n\n    promises.push(\n      this.DATABASE.collection(\"userIDs\")\n        .doc(this.qualtricsUserId)\n        .set(resumesDBKV)\n        .then(() => {\n          this.recordActivity(\n            \"log\",\n            \"resume_order_stored\",\n            \"resume order stored\"\n          );\n        })\n    );\n\n    return Promise.all(promises);\n  }\n\n  // Get job description from the database\n  async getJobDescription() {\n    return this.DATABASE.collection(\"job_description\")\n      .doc(\"values\")\n      .get()\n      .then((doc) => {\n        this.setState({\n          job_title: doc.data().job_title,\n          main_tasks: renderBulletList(doc.data().main_tasks),\n          req_skills: renderBulletList(doc.data().req_skills),\n          job_loc: doc.data().job_loc,\n          job_summary: doc.data().job_summary,\n        });\n        this.recordActivity(\n          \"log\",\n          \"job_description_fetched\",\n          \"job description loaded\"\n        );\n      });\n  }\n\n  async populateValues() {\n    // Get resume order from the database\n    let newOrder = [];\n    return this.DATABASE.collection(\"userIDs\")\n      .doc(this.qualtricsUserId)\n      .get()\n      .then((doc2) => {\n        let kvp = doc2.data();\n        for (let i = 0; i < this.numNames; i++) {\n          // Save the resume order\n          const ithResume = kvp[\"candidate\" + (i + 1) + \"_resume\"];\n          newOrder[i] = ithResume;\n          this.setState({\n            resumesOrder: [...newOrder],\n          });\n          // Get the resume info from the database\n          this.getCandidateResume(ithResume, i);\n        }\n      });\n  }\n\n  // Get the details of resume_resumeNumber, which is resumeList[indexInOrder]\n  async getCandidateResume(resumeNumber, indexInOrder) {\n    let new_dict = {};\n    this.DATABASE.collection(\"resumes\")\n      .doc(\"resume_\" + resumeNumber)\n      .get()\n      .then((doc) => {\n        new_dict[\"edu_degree\"] = doc.data().edu_degree;\n        new_dict[\"edu_distinction\"] = doc.data().edu_distinction;\n        new_dict[\"edu_duration\"] = doc.data().edu_duration;\n        new_dict[\"edu_major\"] = doc.data().edu_major;\n        new_dict[\"edu_university\"] = doc.data().edu_university;\n\n        new_dict[\"work1_company\"] = doc.data().work1_company;\n        new_dict[\"work1_description\"] = renderBulletList(\n          doc.data().work1_description\n        );\n        new_dict[\"work1_duration\"] = doc.data().work1_duration;\n        new_dict[\"work1_location\"] = doc.data().work1_location;\n        new_dict[\"work1_title\"] = doc.data().work1_title;\n\n        new_dict[\"work2_company\"] = doc.data().work2_company;\n        if (doc.data().work2_description != null) {\n          new_dict[\"work2_description\"] = renderBulletList(\n            doc.data().work2_description\n          );\n        }\n        new_dict[\"work2_duration\"] = doc.data().work2_duration;\n        new_dict[\"work2_location\"] = doc.data().work2_location;\n        new_dict[\"work2_title\"] = doc.data().work2_title;\n\n        new_dict[\"work3_company\"] = doc.data().work3_company;\n        if (doc.data().work3_description != null) {\n          new_dict[\"work3_description\"] = renderBulletList(\n            doc.data().work3_description\n          );\n        }\n        new_dict[\"work3_duration\"] = doc.data().work3_duration;\n        new_dict[\"work3_location\"] = doc.data().work3_location;\n        new_dict[\"work3_title\"] = doc.data().work3_title;\n\n        new_dict[\"work4_company\"] = doc.data().work4_company;\n        if (doc.data().work4_description != null) {\n          new_dict[\"work4_description\"] = renderBulletList(\n            doc.data().work4_description\n          );\n        }\n        new_dict[\"work4_duration\"] = doc.data().work4_duration;\n        new_dict[\"work4_location\"] = doc.data().work4_location;\n        new_dict[\"work4_title\"] = doc.data().work4_title;\n\n        let newOrder = [...this.state.resumeList];\n        newOrder[indexInOrder] = new_dict;\n        this.setState({ resumeList: [...newOrder] });\n      });\n  }\n\n  onClick(tabNum) {\n    this.recordActivity(\"click\", tabNum, \"clicked on tab \" + tabNum);\n  }\n\n  render() {\n    // this.recordActivity(\"loading\", \"render\", \"Pool has rendered\");\n    return (\n      <div className=\"pool\">\n        {this.state.job_title ? (\n          <Tabs defaultIndex={0} onSelect={(index) => this.onClick(index)}>\n            <TabList>\n              <Tab>Job Description</Tab>\n              {\n                // Create the resume tabs\n                this.state.names.map((name, index) => (\n                  <Tab key={index}>{name}</Tab>\n                ))\n              }\n            </TabList>\n\n            <TabPanel>\n              {\n                <JobDescription\n                  job_title={this.state.job_title}\n                  main_tasks={this.state.main_tasks}\n                  req_skills={this.state.req_skills}\n                  job_loc={this.state.job_loc}\n                  job_summary={this.state.job_summary}\n                />\n              }\n            </TabPanel>\n            {\n              // Create the resume content\n              this.state.names.map((name, index) => (\n                <TabPanel key={index}>\n                  <Candidate\n                    key={index}\n                    name={name}\n                    resume={this.state.resumeList[index]}\n                  />\n                </TabPanel>\n              ))\n            }\n          </Tabs>\n        ) : (\n          <h1>Loading...</h1>\n        )}\n      </div>\n    );\n  }\n}\n\n/* ############################## Helper Functions ############################# */\n\n// Shuffle an array\nfunction shuffle(array) {\n  // via https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array/12646864#12646864\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n// Create an array [0, 1, 2, ..., n]\nfunction makeArrayToN(n) {\n  return [...Array(n).keys()];\n}\n\n// Turn a paragraph into bullet points\nfunction renderBulletList(txt) {\n  let viewBulletList = [];\n  let bulletList = txt.split(\".\");\n  bulletList.forEach((item, index) => {\n    if (item && item !== \" \") {\n      viewBulletList.push(<li key={index}>{item}</li>);\n    }\n  });\n  return viewBulletList;\n}\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Admin from \"./Admin\";\nimport Pool from \"./Pool\";\nimport firebase from \"./firebase\";\nimport \"./styles/GlobalStyles.css\";\nvar moment = require(\"moment-timezone\");\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DATABASE = firebase.firestore();\n    this.activityCounter = 1;\n    this.recordActivity = this.recordActivity.bind(this);\n\n    // This is hacky, but ReactRouter can't parse params unless inside a Route\n    const loc = document.location.hash;\n    this.pageNum = loc.split(\"/\")[2];\n    this.qualtricsUserId = loc.split(\"/\")[3];\n\n    // Print for debugging purposes within Qualtrics\n    console.log(\"qualtricsUserId: \" + this.qualtricsUserId);\n    console.log(\"pageNum: \" + this.pageNum);\n  }\n\n  componentDidMount() {\n    this.recordActivity(\"loading\", \"accessed\", \"App mounted\");\n  }\n\n  // Send the digital trace data to firebase\n  async recordActivity(cat, val, desc) {\n    // This will be the ID of the activity in firebase -- a string, padded to 5 digits\n    const id = this.activityCounter.toString().padStart(5, \"0\");\n    this.activityCounter = this.activityCounter + 1;\n\n    const now = moment();\n\n    this.DATABASE.collection(\"userIDs\")\n      .doc(this.qualtricsUserId)\n      .collection(\"activityData_page\" + this.pageNum)\n      .doc(id)\n      .set({\n        category: cat,\n        description: desc,\n        value: val,\n        timestamp: new Date(now),\n        timeEpoch: Number(now.format(\"x\")),\n        timeReadable: now.tz(\"America/Los_Angeles\").format(\"M-D-YY h:mm:ssa\"),\n      });\n    console.log(id + \" \" + cat + \": \" + val + \" -- \" + desc);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Route\n            path=\"/page/:pageNum/:qualtricsUserId/\"\n            render={(props) => (\n              <Pool\n                {...props}\n                recordActivity={this.recordActivity}\n                activityCounter={this.activityCounter}\n              />\n            )}\n          />\n          <Route path=\"/admin\" render={(props) => <Admin {...props} />} />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}